var documenterSearchIndex = {"docs":
[{"location":"#GeometricSolutions","page":"Home","title":"GeometricSolutions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for GeometricSolutions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#GeometricSolutions.EnsembleSolution","page":"Home","title":"GeometricSolutions.EnsembleSolution","text":"EnsembleSolution: Collection of solutions for an ensemble of geometric differential equations\n\nContains all fields necessary to store the solutions of an EnsembleProblem, which represents multiple instances of a geometric differential equation with different initial conditions and/or parameters. Each solution in the ensemble is stored as a GeometricSolution.\n\nFields\n\nt: common time series shared across all solutions in the ensemble\ns: vector of GeometricSolution objects, one for each problem instance\nproblem: the original EnsembleProblem\n\nType Parameters\n\ndType: data type for solution values (e.g., Float64)\ntType: data type for time values (e.g., Float64)\nsType: type of the solution vector\nprobType: type of the ensemble problem\n\nConstructor\n\nEnsembleSolution(problem::EnsembleProblem, step::Int = 1)\n\nCreates an EnsembleSolution from an EnsembleProblem. The optional parameter step determines the intervals for storing each solution, i.e., if step > 1 only every step'th solution point is stored for each ensemble member.\n\nUsage\n\nAn EnsembleSolution can be iterated over to access individual solutions:\n\nfor sol in ensemble_solution\n    # sol is a GeometricSolution\n    process_solution(sol)\nend\n\nIndividual solutions can be accessed by index:\n\nfirst_solution = ensemble_solution[1]\nlast_solution = ensemble_solution[end]\n\nThe number of solutions in the ensemble:\n\nn_solutions = nsamples(ensemble_solution)\n\nConvert all solutions to arrays for analysis:\n\nsolution_arrays = arrays(ensemble_solution)\n\nSee Also\n\nGeometricSolution: Individual solution type\nEnsembleProblem: Ensemble problem type\narrays: Convert solutions to arrays for analysis\nrelative_maximum_error: Compare ensemble solutions\n\n\n\n\n\n","category":"type"},{"location":"#GeometricSolutions.GeometricSolution","page":"Home","title":"GeometricSolutions.GeometricSolution","text":"GeometricSolution: Solution of a geometric differential equation\n\nContains all fields necessary to store the solution of a GeometricProblem.\n\nFields\n\nt:  time steps\ns:  NamedTuple of DataSeries for each solution component\nstep: store every step'th time step (default: 1)\nnstore: number of time steps to store\noffset: offset of current time step\n\nConstructors\n\nGeometricSolution(problem, step = 1)\n\nThe usual way to initialise a Solution is by passing a GeometricEquations.EquationProblem, which can for example be an GeometricEquations.ODEProblem or GeometricEquations.PODEProblem. The optional parameter step determines the intervals for storing the solution, i.e., if step > 1 only every step'th solution is actually stored.\n\n\n\n\n\n","category":"type"},{"location":"#GeometricSolutions.arrays-Tuple{EnsembleSolution}","page":"Home","title":"GeometricSolutions.arrays","text":"Convert solutions to arrays for analysis\n\n\n\n\n\n","category":"method"},{"location":"#GeometricSolutions.relative_maximum_error-Tuple{EnsembleSolution, EnsembleSolution}","page":"Home","title":"GeometricSolutions.relative_maximum_error","text":"Compute the relative maximum error between two ensemble solutions.\n\n\n\n\n\n","category":"method"}]
}
